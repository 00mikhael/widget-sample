{"version":3,"file":"150.widget.js","sources":["webpack://LAWMAai/./src/components/chat/ChatHeader.tsx","webpack://LAWMAai/./src/hooks/useInternetStatus.ts","webpack://LAWMAai/./src/components/chat/icons/arrow-follow-up.svg","webpack://LAWMAai/./src/components/chat/icons/suggestions.svg","webpack://LAWMAai/./src/components/chat/icons/arrow.svg","webpack://LAWMAai/./src/components/chat/PopularQuestions.tsx","webpack://LAWMAai/./src/components/chat/MessageContentRenderer.tsx","webpack://LAWMAai/./src/components/chat/ChatMessage.tsx","webpack://LAWMAai/./src/components/chat/TypingIndicator.tsx","webpack://LAWMAai/./src/components/chat/ChatContent.tsx","webpack://LAWMAai/./src/components/chat/ChatInput.tsx","webpack://LAWMAai/./src/components/chat/ChatWindow.tsx"],"sourceRoot":"","sourcesContent":["import React from 'react';\nimport { useInternetStatus } from '../../hooks/useInternetStatus';\nimport { AiOutlineDelete as Delete } from \"react-icons/ai\";\n\ninterface ChatHeaderProps {\n  onClose: () => void;\n  onClearChat: (event: React.MouseEvent) => void;\n  primaryColor?: string;\n  isFullscreen: boolean;\n  onToggleFullscreen: () => void;\n  name: string;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\n  onClose,\n  onClearChat,\n  isFullscreen,\n  onToggleFullscreen,\n  name\n}) => {\n  const isOnline = useInternetStatus();\n\n  return (\n    <div className=\"tw-flex tw-items-center tw-justify-between tw-bg-gradient-to-r tw-from-[var(--chat-primary-color)] tw-to-[var(--chat-primary-darker)] tw-p-4 tw-text-white tw-shadow-md tw-relative tw-z-10\">\n      <div className=\"tw-flex tw-items-center tw-gap-2\">\n        <div className=\"tw-flex tw-items-center\">\n          <div\n            className={`tw-w-2 tw-h-2 tw-rounded-full ${isOnline ? 'tw-bg-green-400' : 'tw-bg-red-500'\n              } tw-animate-pulse tw-mr-2`}\n            title={isOnline ? 'Online' : 'Offline'}\n          ></div>\n          <h3 id=\"chat-widget-title\" className=\"tw-font-semibold\">{name}</h3>\n        </div>\n      </div>\n      <div className=\"tw-flex tw-gap-2\">\n        {/* Clear Chat Button */}\n        <button\n          onClick={onClearChat}\n          className=\"tw-flex tw-items-center tw-justify-center tw-w-9 tw-h-9 tw-rounded-3xl hover:tw-scale-110 hover:primary-darken tw-transition-all tw-duration-200 tw-transform active:tw-scale-95\"\n          aria-label=\"Clear chat history\"\n        >\n          <Delete size={20} className=\"tw-text-red-500\" />\n        </button>\n\n        {/* Fullscreen Toggle Button */}\n        <button\n          onClick={onToggleFullscreen}\n          className=\"tw-flex tw-items-center tw-justify-center tw-w-9 tw-h-9 tw-rounded-3xl tw-text-gray-300 hover:primary-darken hover:tw-scale-110 tw-transition-all tw-duration-200 tw-transform active:tw-scale-95\"\n          aria-label={isFullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n        >\n          {isFullscreen ? (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1\" stroke=\"currentColor\" className=\"tw-w-5 tw-h-5\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 9V4.5M9 9H4.5M15 9V4.5M15 9H19.5M9 15v4.5M9 15H4.5M15 15v4.5M15 15H19.5\" />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1\" stroke=\"currentColor\" className=\"tw-w-5 tw-h-5\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15\" />\n            </svg>\n          )}\n        </button>\n\n        {/* Close Button */}\n        <button\n          onClick={onClose}\n          className=\"tw-flex tw-items-center tw-justify-center tw-w-9 tw-h-9 tw-rounded-3xl tw-text-gray-300 hover:primary-darken hover:tw-scale-110 tw-transition-all tw-duration-200 tw-transform active:tw-scale-95\"\n          aria-label=\"Close chat widget\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-5 tw-h-5\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatHeader;\n","import { useState, useEffect } from 'react';\n\nexport function useInternetStatus() {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  return isOnline;\n}\n","var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgArrowFollowUp = function SvgArrowFollowUp(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 25,\n    height: 25,\n    fill: \"none\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#arrow-follow-up_svg__a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000\",\n    d: \"M.73 13.074a.775.775 0 0 1-.73-.807l.02-.385a8.46 8.46 0 0 1 8.45-8.037h10.305l-2.76-2.509A.773.773 0 0 1 15.964.25a.773.773 0 0 1 1.086-.053l4.23 3.845a.77.77 0 0 1 0 1.135l-4.23 3.845a.768.768 0 1 1-1.033-1.14l2.759-2.499H8.469a6.92 6.92 0 0 0-6.912 6.576l-.019.384a.77.77 0 0 1-.808.731m23.15-1.538c.422.02.75.384.73.807l-.02.385a8.46 8.46 0 0 1-8.45 8.037H5.836l2.76 2.509a.773.773 0 0 1 .052 1.086.773.773 0 0 1-1.086.053l-4.23-3.845a.77.77 0 0 1 0-1.135l4.23-3.845a.768.768 0 1 1 1.033 1.14l-2.759 2.499H16.14a6.92 6.92 0 0 0 6.912-6.576l.02-.384a.77.77 0 0 1 .807-.731\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"arrow-follow-up_svg__a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0 0h24.61v24.61H0z\"\n  })))));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgArrowFollowUp);\nexport default ForwardRef;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgSuggestions = function SvgSuggestions(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 25,\n    height: 25,\n    fill: \"none\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000\",\n    d: \"M21.778.781c0-.43-.35-.781-.778-.781a.78.78 0 0 0-.778.781v1.953h-1.944a.782.782 0 0 0 0 1.563h1.944V6.25c0 .43.35.781.778.781a.78.78 0 0 0 .778-.781V4.297h1.944a.782.782 0 0 0 0-1.563h-1.944zM12.444 5.86c-.364 0-.729.079-1.06.23L.818 10.845a1.388 1.388 0 0 0 0 2.529l10.568 4.76a2.57 2.57 0 0 0 2.12 0l10.567-4.76a1.388 1.388 0 0 0 0-2.53L13.504 6.09a2.6 2.6 0 0 0-1.06-.23m-.427 1.656c.136-.059.277-.093.427-.093q.225 0 .428.093l10.209 4.594-10.209 4.595a1.1 1.1 0 0 1-.428.093 1 1 0 0 1-.427-.093L1.813 12.11l10.208-4.594zm-8.97 8.574-2.23 1.006a1.388 1.388 0 0 0 0 2.529l10.568 4.76a2.57 2.57 0 0 0 2.12 0l10.567-4.76a1.388 1.388 0 0 0 0-2.53l-2.231-1.005-1.9.854 3.135 1.416-10.209 4.595a1.1 1.1 0 0 1-.427.093 1 1 0 0 1-.428-.093L1.813 18.36l3.136-1.41z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgSuggestions);\nexport default ForwardRef;","var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgArrow = function SvgArrow(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#arrow_svg__a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#202A37\",\n    d: \"M0 12a12 12 0 1 0 24 0 12 12 0 0 0-24 0m17.25 3c0 .623-.502 1.125-1.125 1.125A1.12 1.12 0 0 1 15 15v-4.41l-6.328 6.332a1.125 1.125 0 0 1-1.59-1.59l6.329-6.327L8.625 9A1.12 1.12 0 0 1 7.5 7.875c0-.623.502-1.125 1.125-1.125h7.5c.623 0 1.125.502 1.125 1.125z\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"arrow_svg__a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0 0h24v24H0z\"\n  })))));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgArrow);\nexport default ForwardRef;","import React from 'react';\nimport ArrowFollowUp from './icons/arrow-follow-up.svg';\nimport Suggestions from './icons/suggestions.svg';\nimport Arrow from './icons/arrow.svg';\n\ninterface PopularQuestionsProps {\n  questions: string[];\n  handleSendMessage: (messageText: string) => Promise<void>;\n  title?: string;\n  variant?: 'primary' | 'follow-up';\n}\n\nconst PopularQuestions: React.FC<PopularQuestionsProps> = ({\n  questions,\n  handleSendMessage,\n  title = \"Popular Questions\",\n  variant = 'primary'\n}) => {\n  const isFollowUp = variant === 'follow-up';\n\n  return (\n    <div className={`\n      tw-mt-4 tw-space-y-2 tw-divide-y tw-divide-gray-100\n      ${isFollowUp ? 'tw-mt-2' : ''}\n    `}>\n      <div className='tw-flex tw-items-center tw-gap-2'>\n        <div className='tw-flex tw-justify-center tw-items-center'>\n          {isFollowUp ? (\n            <ArrowFollowUp />\n          ) : (\n            <Suggestions />\n          )}\n        </div>\n        <div className={`\n          tw-w-full tw-text-gray-900\n          ${isFollowUp ? 'tw-text-base' : 'tw-text-lg'}\n        `}>{title}</div>\n      </div>\n      <div className=\"tw-flex tw-flex-wrap tw-justify-center tw-gap-3 tw-pt-3\">\n        {questions.map((question, index) => (\n          <button\n            key={index}\n            onClick={() => handleSendMessage(question)}\n            className={`\n              tw-px-4 tw-py-2 tw-bg-[#F7F9FB] tw-text-[#5D636E] tw-rounded-md\n              tw-text-xs tw-w-full tw-max-w-[21.5rem] tw-text-left\n              tw-flex tw-justify-between tw-items-center tw-gap-4\n              ${isFollowUp ? 'tw-bg-white tw-border tw-border-gray-100' : ''}\n            `}\n          >\n            <span>{question}</span>\n            <div className='tw-flex tw-justify-center tw-items-center'>\n              <Arrow />\n            </div>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PopularQuestions;\n","import React from 'react';\nimport { parseMessage } from './utils';\nimport PopularQuestions from './PopularQuestions';\n\ninterface MessageContentRendererProps {\n  contentType?: string;\n  content: string;\n  mediaUrl?: string;\n  options?: string[];\n  imageUrl?: string;\n  follow_up_questions?: string[];\n  onSendMessage: (message: string) => void;\n  isStreaming?: boolean;\n  isUser?: boolean;\n  typedElementRef?: React.RefObject<HTMLSpanElement | null>;\n}\n\nconst MessageContentRenderer: React.FC<MessageContentRendererProps> = ({\n  contentType = 'text',\n  content,\n  mediaUrl,\n  options,\n  imageUrl,\n  onSendMessage,\n  isStreaming = false,\n  isUser = false,\n  typedElementRef,\n  follow_up_questions\n}) => {\n  const handleOptionSelect = (option: string) => {\n    onSendMessage(option);\n  };\n\n  // Render the appropriate content based on type\n  switch (contentType) {\n    case 'follow_up_questions':\n      return (\n        <PopularQuestions\n          questions={follow_up_questions || []}\n          handleSendMessage={async (text) => {\n            await Promise.resolve(onSendMessage(text));\n          }}\n          title={content || \"Follow up questions\"}\n          variant=\"follow-up\"\n        />\n      );\n    case 'question':\n      return <QuestionContent content={content} options={options} onSelect={handleOptionSelect} isUser={isUser} />;\n    case 'image':\n      return <ImageContent content={content} mediaUrl={mediaUrl} isUser={isUser} />;\n    case 'video':\n      return <VideoContent content={content} mediaUrl={mediaUrl} isUser={isUser} />;\n    case 'document':\n      return <DocumentContent content={content} mediaUrl={mediaUrl} isUser={isUser} />;\n    case 'text_image':\n      return <TextImageContent content={content} imageUrl={imageUrl} isUser={isUser} />;\n    case 'text':\n    default:\n      return <TextContent\n        content={content}\n        isStreaming={isStreaming}\n        isUser={isUser}\n        typedElementRef={typedElementRef}\n      />;\n  }\n};\n\ninterface TextContentProps {\n  content: string;\n  isStreaming?: boolean;\n  isUser?: boolean;\n  typedElementRef?: React.RefObject<HTMLSpanElement | null>;\n}\n\nconst TextContent: React.FC<TextContentProps> = ({ content, isStreaming, isUser, typedElementRef }) => {\n  const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  return (\n    <div className={`tw-flex tw-flex-col tw-w-full ${isUser ? 'tw-items-end' : ''}`}>\n      <div className={`\n        tw-max-w-[80%] tw-relative\n        tw-rounded-2xl\n        tw-text-gray-900\n        tw-transition-all tw-duration-200\n        hover:tw-shadow-md message-content\n        tw-text-sm tw-px-4 tw-py-2\n        tw-flex tw-flex-col tw-gap-3\n        ${isUser ? 'tw-bg-gray-50 hover:tw-bg-gray-100 user-message' : 'ai-message'}\n      `}>\n        {(!isUser && isStreaming && typedElementRef) ? (\n          <div className=\"tw-text-gray-800 typing-container\">\n            <span ref={typedElementRef} className=\"typed-text\" />\n          </div>\n        ) : (\n          <div\n            className=\"tw-text-gray-800\"\n            dangerouslySetInnerHTML={{ __html: parseMessage(content) }}\n          />\n        )}\n        <div className={`message-timestamp-hover ${isUser ? 'tw-right-4' : 'tw-left-4'}`}>\n          {timestamp}\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface QuestionContentProps {\n  content: string;\n  options?: string[];\n  onSelect: (option: string) => void;\n  isUser?: boolean;\n}\n\nconst QuestionContent: React.FC<QuestionContentProps> = ({ content, options, onSelect, isUser = false }) => {\n  const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  return (\n    <div className={`tw-flex tw-flex-col tw-w-full ${isUser ? 'tw-items-end' : ''}`}>\n      {/* Question text */}\n      {content && (\n        <div className={`\n          tw-max-w-[80%] tw-relative\n          tw-rounded-2xl\n          tw-text-gray-900\n          tw-transition-all tw-duration-200\n          hover:tw-shadow-md message-content\n          tw-text-sm tw-px-4 tw-py-2\n          tw-flex tw-flex-col tw-gap-3\n          ${!options?.length ? '' : 'tw-mb-1'}\n          ${isUser ? 'tw-bg-gray-50 hover:tw-bg-gray-100 user-message' : 'ai-message'}\n        `}>\n          <div\n            className=\"tw-text-gray-800\"\n            dangerouslySetInnerHTML={{ __html: parseMessage(content) }}\n          />\n        </div>\n      )}\n\n      {/* Options */}\n      {options && options.length > 0 && (\n        <>\n          <div className=\"tw-max-w-[80%]\">\n            <div className=\"tw-flex tw-flex-col tw-gap-2\">\n              {options.map((option, index) => (\n                <button\n                  key={index}\n                  onClick={() => onSelect(option)}\n                  className=\"tw-w-full tw-text-center tw-py-3 tw-px-4 tw-bg-white tw-rounded-full tw-shadow-sm hover:tw-shadow-md tw-transition-shadow\"\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div className=\"tw-flex tw-items-center tw-gap-1 tw-my-2 tw-text-xs tw-text-gray-500 tw-transition-opacity tw-duration-200 tw-opacity-75 hover:tw-opacity-100\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-4 tw-h-4\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z\" />\n            </svg>\n            <span>Options available</span>\n          </div>\n        </>\n      )}\n      <div className={`message-timestamp-hover ${isUser ? 'tw-right-4' : 'tw-left-4'}`}>\n        {timestamp}\n      </div>\n    </div>\n  );\n};\n\ninterface MediaContentProps {\n  content: string;\n  mediaUrl?: string;\n  isUser?: boolean;\n}\n\nconst ImageContent: React.FC<MediaContentProps> = ({ content, mediaUrl, isUser = false }) => {\n  const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  return (\n    <div className={`tw-flex tw-flex-col tw-w-full ${isUser ? 'tw-items-end' : ''}`}>\n      {/* Caption text */}\n      {content && (\n        <div className={`\n          tw-max-w-[80%] tw-relative\n          tw-rounded-2xl\n          tw-text-gray-900\n          tw-transition-all tw-duration-200\n          hover:tw-shadow-md message-content\n          tw-text-sm tw-px-4 tw-py-2\n          tw-flex tw-flex-col tw-gap-3\n          tw-mb-1\n          ${isUser ? 'tw-bg-gray-50 hover:tw-bg-gray-100 user-message' : 'ai-message'}\n        `}>\n          <div\n            className=\"tw-text-gray-800 \"\n            dangerouslySetInnerHTML={{ __html: parseMessage(content) }}\n          />\n        </div>\n      )}\n\n      {/* Image with shadow and rounded corners */}\n      {mediaUrl && (\n        <>\n          <div>\n            <div className=\"tw-flex tw-justify-center tw-items-center tw-h-[200px] tw-rounded-lg tw-overflow-hidden tw-shadow-lg\">\n              <img\n                src={mediaUrl}\n                alt=\"Image\"\n                className=\"tw-object-contain tw-max-h-[200px] tw-w-auto tw-rounded-lg\"\n                loading=\"lazy\"\n              />\n            </div>\n          </div>\n          <div className=\"tw-flex tw-items-center tw-gap-1 tw-my-2 tw-text-xs tw-text-gray-500 tw-transition-opacity tw-duration-200 tw-opacity-75 hover:tw-opacity-100\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-4 tw-h-4\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z\" />\n            </svg>\n            <span>Image attached</span>\n          </div>\n        </>\n      )}\n      <div className={`message-timestamp-hover ${isUser ? 'tw-right-4' : 'tw-left-4'}`}>\n        {timestamp}\n      </div>\n    </div>\n  );\n};\n\nconst VideoContent: React.FC<MediaContentProps> = ({ content, mediaUrl, isUser = false }) => {\n  const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  return (\n    <div className={`tw-flex tw-flex-col tw-w-full ${isUser ? 'tw-items-end' : ''}`}>\n      {/* Caption text */}\n      {content && (\n        <div className={`\n          tw-max-w-[80%] tw-relative\n          tw-rounded-2xl\n          tw-text-gray-900\n          tw-transition-all tw-duration-200\n          hover:tw-shadow-md message-content\n          tw-text-sm tw-px-4 tw-py-2\n          tw-flex tw-flex-col tw-gap-3\n          tw-mb-1\n          ${isUser ? 'tw-bg-gray-50 hover:tw-bg-gray-100 user-message' : 'ai-message'}\n        `}>\n          <div\n            className=\"tw-text-gray-800 \"\n            dangerouslySetInnerHTML={{ __html: parseMessage(content) }}\n          />\n        </div>\n      )}\n\n      {/* Video with shadow and rounded corners */}\n      {mediaUrl && (\n        <>\n          <div>\n            <div className=\"tw-flex tw-justify-center tw-items-center tw-h-[200px] tw-rounded-lg tw-overflow-hidden tw-shadow-lg\">\n              <video\n                controls\n                preload=\"metadata\"\n                className=\"tw-object-contain tw-max-h-[200px] tw-w-auto tw-rounded-lg\"\n                controlsList=\"nodownload\"\n                playsInline\n              >\n                <source src={mediaUrl} type=\"video/mp4\" />\n                Your browser does not support the video tag.\n              </video>\n            </div>\n          </div>\n          <div className=\"tw-flex tw-items-center tw-gap-1 tw-my-2 tw-text-xs tw-text-gray-500 tw-transition-opacity tw-duration-200 tw-opacity-75 hover:tw-opacity-100\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-4 tw-h-4\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z\" />\n            </svg>\n            <span>Video attached</span>\n          </div>\n        </>\n      )}\n      <div className={`message-timestamp-hover ${isUser ? 'tw-right-4' : 'tw-left-4'}`}>\n        {timestamp}\n      </div>\n    </div>\n  );\n};\n\n// Utility function to format file size\nconst formatFileSize = (bytes: number) => {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n};\n\n// Utility function to get document size\nconst getDocumentSize = async (url: string) => {\n  try {\n    const response = await fetch(url, { method: 'HEAD' });\n    const contentLength = response.headers.get('content-length');\n    if (!contentLength) return null;\n\n    const bytes = parseInt(contentLength);\n    return formatFileSize(bytes);\n  } catch {\n    return null;\n  }\n};\n\nconst DocumentContent: React.FC<MediaContentProps> = ({ content, mediaUrl, isUser = false }) => {\n  const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  // Extract filename from URL or use generic name\n  const fileName = mediaUrl ? mediaUrl.split('/').pop() || \"Document\" : \"\";\n  const [fileSize, setFileSize] = React.useState<string>(\"Calculating...\");\n\n  React.useEffect(() => {\n    if (mediaUrl) {\n      getDocumentSize(mediaUrl).then(size => {\n        setFileSize(size || \"Size unknown\");\n      });\n    }\n  }, [mediaUrl]);\n\n  return (\n    <div className={`tw-flex tw-flex-col tw-w-full ${isUser ? 'tw-items-end' : ''}`}>\n      {/* Caption text */}\n      {content && (\n        <div className={`\n          tw-max-w-[80%] tw-relative\n          tw-rounded-2xl\n          tw-text-gray-900\n          tw-transition-all tw-duration-200\n          hover:tw-shadow-md message-content\n          tw-text-sm tw-px-4 tw-py-2\n          tw-flex tw-flex-col tw-gap-3\n          tw-mb-1\n          ${isUser ? 'tw-bg-gray-50 hover:tw-bg-gray-100 user-message' : 'ai-message'}\n        `}>\n          <div\n            className=\"tw-text-gray-800 \"\n            dangerouslySetInnerHTML={{ __html: parseMessage(content) }}\n          />\n        </div>\n      )}\n\n      {/* Document preview */}\n      {mediaUrl && (\n        <>\n          <div>\n            <div className=\"tw-flex tw-flex-col tw-rounded-lg tw-overflow-hidden tw-border tw-border-gray-200 tw-bg-gray-100 tw-shadow-lg\">\n              {/* Preview area */}\n              <div className=\"tw-relative tw-bg-gray-200 tw-h-[200px] tw-flex tw-items-center tw-justify-center\">\n                <div className=\"tw-absolute tw-inset-0 tw-opacity-50\">\n                  <div className=\"tw-h-full tw-w-full tw-bg-gray-300\"></div>\n                </div>\n\n                {/* View button */}\n                <a\n                  href={mediaUrl}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"tw-z-10 tw-flex tw-flex-col tw-items-center tw-justify-center tw-gap-1 tw-text-gray-600 hover:tw-text-gray-800\"\n                >\n                  <div className=\"tw-bg-white tw-p-2 tw-rounded-full tw-shadow-md\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-8 tw-h-8\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\" />\n                    </svg>\n                  </div>\n                  <span className=\"tw-text-lg \">View</span>\n                </a>\n              </div>\n\n              {/* Document info footer */}\n              <div className=\"tw-p-3 tw-bg-white tw-flex tw-items-start tw-gap-3\">\n                <div className=\"tw-text-blue-600\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-6 tw-h-6\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n                  </svg>\n                </div>\n                <div className=\"tw-flex tw-flex-col tw-flex-1\">\n                  <div className=\" tw-text-gray-800 tw-truncate\">{fileName}</div>\n                  <div className=\"tw-text-sm tw-text-gray-500\">{fileSize}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tw-flex tw-items-center tw-gap-1 tw-my-2 tw-text-xs tw-text-gray-500 tw-transition-opacity tw-duration-200 tw-opacity-75 hover:tw-opacity-100\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-4 tw-h-4\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n            </svg>\n            <span>Document attached</span>\n          </div>\n        </>\n      )}\n      <div className={`message-timestamp-hover ${isUser ? 'tw-right-4' : 'tw-left-4'}`}>\n        {timestamp}\n      </div>\n    </div>\n  );\n};\n\ninterface TextImageContentProps {\n  content: string;\n  imageUrl?: string;\n  isUser?: boolean;\n}\n\nconst TextImageContent: React.FC<TextImageContentProps> = ({ content, imageUrl, isUser = false }) => {\n  const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  return (\n    <div className={`tw-flex tw-flex-col tw-w-full ${isUser ? 'tw-items-end' : ''}`}>\n      {/* Text content */}\n      {content && (\n        <div className={`\n            tw-max-w-[80%] tw-relative\n            tw-rounded-2xl\n            tw-text-gray-900\n            tw-transition-all tw-duration-200\n            hover:tw-shadow-md message-content\n            tw-text-sm tw-px-4 tw-py-2\n            tw-flex tw-flex-col tw-gap-3\n            tw-mb-1\n            ${isUser ? 'tw-bg-gray-50 hover:tw-bg-gray-100 user-message' : 'ai-message'}\n          `}>\n          <div\n            className=\"tw-text-gray-800 \"\n            dangerouslySetInnerHTML={{ __html: parseMessage(content) }}\n          />\n        </div>\n      )}\n\n      {/* Image with shadow and rounded corners */}\n      {imageUrl && (\n        <>\n          <div>\n            <div className=\"tw-flex tw-justify-center tw-items-center tw-h-[200px] tw-rounded-lg tw-overflow-hidden tw-shadow-lg\">\n              <img\n                src={imageUrl}\n                alt=\"Attached\"\n                className=\"tw-object-contain tw-max-h-[200px] tw-w-auto tw-rounded-lg\"\n                loading=\"lazy\"\n              />\n            </div>\n          </div>\n          <div className=\"tw-flex tw-items-center tw-gap-1 tw-my-2 tw-text-xs tw-text-gray-500 tw-transition-opacity tw-duration-200 tw-opacity-75 hover:tw-opacity-100\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-4 tw-h-4\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z\" />\n            </svg>\n            <span>Image attached</span>\n          </div>\n        </>\n      )}\n      <div className={`message-timestamp-hover ${isUser ? 'tw-right-4' : 'tw-left-4'}`}>\n        {timestamp}\n      </div>\n    </div>\n  );\n};\n\nexport default MessageContentRenderer;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Typed from 'typed.js';\nimport { Message, parseMessage } from './utils';\nimport MessageContentRenderer from './MessageContentRenderer';\n\ninterface ChatMessageProps {\n  message: Message;\n  isStreaming?: boolean; // Optional prop to control Typed.js initialization\n  isCurrentMessage?: boolean; // Optional prop to identify current chat message\n  chatContentRef: React.RefObject<HTMLDivElement>; // Reference to chat content for scrolling\n  onSendMessage: (messageText: string) => void; // Handler for sending messages (for question options)\n}\n\nconst ChatMessage: React.FC<ChatMessageProps> = ({ message, isStreaming = false, isCurrentMessage = false, chatContentRef, onSendMessage }) => {\n  const isUser = message.sender === 'user';\n  const typedElementRef = useRef<HTMLSpanElement | null>(null);\n  const typedInstanceRef = useRef<Typed | null>(null);\n  const [isPrimaryContentTyped, setIsPrimaryContentTyped] = useState(false);\n\n  // Effect for Typed.js animation on AI messages\n  useEffect(() => {\n    // Only run for AI messages that are marked for streaming, haven't been typed yet, and if the element exists\n    if (!isUser && isStreaming && !message.hasTyped && typedElementRef.current) {\n      // Destroy previous instance if it exists\n      typedInstanceRef.current?.destroy();\n\n      const options = {\n        strings: [parseMessage(message.content)], // Parse content before typing\n        typeSpeed: 20,\n        showCursor: true,\n        cursorChar: '|',\n        contentType: 'html', // Typed.js expects a string, 'html' is valid\n        onComplete: (self: Typed) => {\n          // Remove cursor after completion\n          if (self.cursor) {\n            self.cursor.remove();\n          }\n          // Mark message as typed and allow additional responses\n          message.hasTyped = true;\n          setIsPrimaryContentTyped(true);\n        },\n        onStringTyped: () => {\n          // Scroll into view as text is being typed using the ref\n          if (chatContentRef.current) {\n            chatContentRef.current.scrollTop = chatContentRef.current.scrollHeight;\n          }\n        }\n      };\n\n      typedInstanceRef.current = new Typed(typedElementRef.current, options);\n    } else if (!isStreaming || message.hasTyped) {\n      // If streaming stops or message was already typed\n      if (typedInstanceRef.current) {\n        typedInstanceRef.current.destroy();\n        typedInstanceRef.current = null;\n      }\n      // Always ensure final content is displayed correctly, even if typing was interrupted\n      if (typedElementRef.current) {\n        typedElementRef.current.innerHTML = parseMessage(message.content);\n      }\n      // Set primary content as typed to allow additional responses\n      if (!isPrimaryContentTyped) {\n        setIsPrimaryContentTyped(true);\n      }\n    }\n\n    // Cleanup function to destroy Typed instance on unmount or re-render\n    return () => {\n      typedInstanceRef.current?.destroy();\n      typedInstanceRef.current = null;\n    };\n  }, [isUser, isStreaming, message.content, message.hasTyped]); // Remove message.id from deps since we use hasTyped now\n\n  return (\n    <div\n      className={`\n        tw-flex tw-flex-col\n        ${isUser ? 'tw-items-end' : 'tw-items-start'}\n        ${isCurrentMessage ? 'user-message-animate' : ''}\n        tw-w-full\n      `}\n    >\n      <div className={`tw-flex tw-flex-col ${isUser ? 'tw-items-end' : 'tw-items-start'} tw-w-full tw-gap-2`}>\n        <div className=\"tw-w-full\">\n          <MessageContentRenderer\n            contentType={message.content_type}\n            content={message.content}\n            mediaUrl={message.media_url}\n            imageUrl={message.image_url}\n            options={message.options}\n            onSendMessage={onSendMessage}\n            isStreaming={isStreaming}\n            isUser={isUser}\n            typedElementRef={typedElementRef}\n          />\n\n          {/* Show additional responses */}\n          {!isUser && isPrimaryContentTyped && message.additional_responses && message.additional_responses.length > 0 && (\n            <div className=\"tw-flex tw-flex-col tw-gap-4 tw-mt-4 tw-pt-4 additional-responses\">\n              {message.additional_responses.map((response, index) => (\n                <MessageContentRenderer\n                  key={index}\n                  contentType={response.content_type}\n                  content={response.content}\n                  mediaUrl={response.media_url}\n                  options={response.options}\n                  follow_up_questions={response.follow_up_questions}\n                  onSendMessage={onSendMessage}\n                  isUser={isUser}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChatMessage);\n","import React from 'react';\n\ninterface TypingIndicatorProps {\n  statusMessage?: string;\n}\n\nconst TypingIndicator: React.FC<TypingIndicatorProps> = ({\n  statusMessage = \"Gathering your information...\"\n}) => {\n  return (\n    <div className=\"tw-flex tw-items-center tw-bg-[rgb(224,232,232)] tw-border tw-border-[#486966] tw-rounded-xl tw-p-4 tw-mb-2 tw-max-w-[24rem]\">\n      <div className=\"tw-grid tw-grid-cols-2 tw-gap-1 tw-mr-3 tw-transform tw-rotate-45 tw-shrink-0\">\n        <div className=\"tw-w-[0.3rem] tw-h-[0.3rem] tw-bg-[#486966] tw-rounded-full tw-typing-dot-new\"></div>\n        <div className=\"tw-w-[0.3rem] tw-h-[0.3rem] tw-bg-[#486966] tw-rounded-full tw-typing-dot-new\"></div>\n        <div className=\"tw-w-[0.3rem] tw-h-[0.3rem] tw-bg-[#486966] tw-rounded-full tw-typing-dot-new\"></div>\n        <div className=\"tw-w-[0.3rem] tw-h-[0.3rem] tw-bg-[#486966] tw-rounded-full tw-typing-dot-new\"></div>\n      </div>\n      <div className=\"tw-font-medium tw-text-sm tw-text-gray-800\">{statusMessage}</div>\n    </div>\n  );\n};\n\nexport default TypingIndicator;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { ReactTyped } from 'react-typed';\nimport type { Typed } from 'react-typed';\nimport { Message, CurrentChat } from './utils';\nimport ChatMessage from './ChatMessage';\nimport TypingIndicator from './TypingIndicator';\nimport PopularQuestions from './PopularQuestions';\n\ninterface ChatContentProps {\n  previousMessages: Message[];\n  currentChat: CurrentChat;\n  isTyping: boolean;\n  isFullscreen: boolean;\n  chatContentRef: React.RefObject<HTMLDivElement>;\n  welcomeMessages?: string[];\n  popularQuestions?: string[];\n  popularQuestionsTitle?: string;\n  onScroll?: () => void;\n  onSendMessage: (messageText: string) => void;\n  statusMessage?: string;\n}\n\nconst MAX_MESSAGE_LENGTH = 60\n\nconst ChatContent: React.FC<ChatContentProps> = ({\n  previousMessages,\n  currentChat,\n  isTyping,\n  isFullscreen,\n  chatContentRef,\n  welcomeMessages,\n  popularQuestions,\n  popularQuestionsTitle,\n  onSendMessage,\n  statusMessage\n}) => {\n  const showWelcome = previousMessages.length === 0 && !currentChat.user && !currentChat.ai && !isTyping;\n  const typedInstanceRef = useRef<Typed | null>(null);\n\n  // Enhanced auto-scroll effect with smooth scrolling\n  useEffect(() => {\n    const scrollToBottom = (smooth = true) => {\n      if (chatContentRef.current && !showWelcome) {\n        chatContentRef.current.scrollTo({\n          top: chatContentRef.current.scrollHeight,\n          behavior: smooth ? 'smooth' : 'auto'\n        });\n      }\n    };\n\n    // Initial scroll without smooth behavior\n    if (!showWelcome) {\n      scrollToBottom(false);\n    }\n\n    // Set up an observer to watch for content changes\n    const observer = new MutationObserver(() => {\n      if (!showWelcome) {\n        scrollToBottom(true);\n      }\n    });\n\n    if (chatContentRef.current && !showWelcome) {\n      observer.observe(chatContentRef.current, {\n        childList: true,\n        subtree: true,\n        characterData: true\n      });\n    }\n\n    // Clean up\n    return () => observer.disconnect();\n  }, [previousMessages, currentChat, isTyping, showWelcome]);\n\n  // Additional scroll trigger when new content is added\n  useEffect(() => {\n    if (chatContentRef.current && !showWelcome) {\n      chatContentRef.current.scrollTo({\n        top: chatContentRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  }, [currentChat.ai?.content, showWelcome]);\n\n  return (\n    <div\n      ref={chatContentRef}\n      className={`\n        tw-absolute tw-inset-0 tw-overflow-y-auto\n        tw-overscroll-none tw-p-4 tw-space-y-4\n        hide-scrollbar\n        ${showWelcome ? 'tw-h-auto' : 'tw-h-full'}\n      `}\n      style={{ WebkitOverflowScrolling: 'touch' }}\n    >\n      {showWelcome && (\n        <>\n          <div className={`tw-text-center tw-px-6 welcome-gradient ${isFullscreen ? 'tw-text-3xl tw-pt-20 tw-font-bold' : 'tw-pt-4 tw-h-14'}`}>\n            <ReactTyped\n              key={showWelcome ? 'active' : 'inactive'}\n              strings={welcomeMessages?.map((msg) => {\n                if (msg?.length > MAX_MESSAGE_LENGTH) {\n                  return msg.slice(0, MAX_MESSAGE_LENGTH) + '...';\n                }\n                return msg;\n              })}\n              typeSpeed={20}\n              backSpeed={30}\n              backDelay={3000}\n              loop\n              smartBackspace\n              shuffle={false}\n              typedRef={(typed) => { typedInstanceRef.current = typed; }}\n            />\n          </div>\n\n          {popularQuestions && popularQuestions.length > 0 && (\n            <div className={`${isFullscreen ? `tw-pt-2` : `tw-pt-6`}`}>\n              <PopularQuestions\n                questions={popularQuestions}\n                handleSendMessage={async (text) => {\n                  await onSendMessage(text);\n                }}\n                title={popularQuestionsTitle}\n              />\n            </div>\n          )}\n        </>\n      )}\n\n      <div className={`tw-flex tw-flex-col tw-space-y-4 ${!showWelcome ? 'tw-min-h-full' : ''}`}>\n        {previousMessages.map((message) => (\n          <ChatMessage\n            key={message.id}\n            message={message}\n            isStreaming={false}\n            isCurrentMessage={false}\n            chatContentRef={chatContentRef}\n            onSendMessage={onSendMessage}\n          />\n        ))}\n\n        {currentChat.user && (\n          <>\n            <ChatMessage\n              message={currentChat.user}\n              isStreaming={false}\n              isCurrentMessage={true}\n              chatContentRef={chatContentRef}\n              onSendMessage={onSendMessage}\n            />\n            {isTyping && <TypingIndicator statusMessage={statusMessage} />}\n          </>\n        )}\n\n        {!isTyping && currentChat.ai && (\n          <ChatMessage\n            key={`ai-${currentChat.ai.id}`}\n            message={currentChat.ai}\n            isStreaming={currentChat.ai.isStreaming}\n            isCurrentMessage={true}\n            chatContentRef={chatContentRef}\n            onSendMessage={onSendMessage}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatContent;\n","import React, { useState, useRef, useCallback } from 'react';\nimport { MdAttachFile } from \"react-icons/md\";\n\ninterface ChatInputProps {\n  error: string;\n  uploadedFileName?: string;\n  primaryColor?: string;\n  onSendMessage: (messageText: string) => void;\n  onFileUpload: (file: File) => void;\n  onRemoveFile: () => void;\n  isFullscreen: boolean;\n  showWelcome: boolean;\n}\n\nconst ChatInput: React.FC<ChatInputProps> = ({\n  error,\n  uploadedFileName,\n  onSendMessage,\n  onFileUpload,\n  onRemoveFile,\n  isFullscreen,\n  showWelcome,\n}) => {\n  const [messageInput, setMessageInput] = useState('');\n  const [isExpanded, setIsExpanded] = useState(false);\n  const maxLength = 2000;\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setMessageInput(event.target.value);\n  };\n\n  const handleSend = useCallback(() => {\n    // Check if there's text input OR an uploaded file to send\n    if (messageInput.trim() || uploadedFileName) {\n      onSendMessage(messageInput);\n      setMessageInput(''); // Clear input after sending\n      // Note: File removal is handled by the parent (ChatWidget) after successful send\n    }\n  }, [messageInput, onSendMessage, uploadedFileName]);\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    // Send message on Enter key press, unless Shift is also pressed\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault(); // Prevent default Enter behavior (new line)\n      handleSend();\n    }\n  };\n\n  const handleAttachClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      onFileUpload(file);\n    }\n    // Reset file input value so the same file can be selected again\n    if (event.target) {\n      event.target.value = '';\n    }\n  };\n\n  const handleRemoveFileClick = () => {\n    onRemoveFile();\n    // Also reset the file input ref's value\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }\n\n  const canSend = messageInput.trim().length > 0 || !!uploadedFileName;\n\n  return (\n    <div className={`\n      tw-transition-transform tw-duration-500 tw-bg-white tw-p-4 tw-sticky tw-bottom-0 tw-mt-4\n      ${isFullscreen && showWelcome ? 'tw-transform -tw-translate-y-14' : 'tw-transform tw-translate-y-0 tw-border-t tw-border-gray-100'}\n    `}>\n      <div className=\"tw-flex tw-flex-col tw-rounded-xl tw-border tw-border-gray-200 tw-bg-white focus-within:tw-shadow-md\">\n        <div className=\"tw-relative\">\n          <textarea\n            value={messageInput}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            onFocus={() => setIsExpanded(true)}\n            onBlur={() => !messageInput && setIsExpanded(false)}\n            placeholder={'Ask me anything...'}\n            className={`\n              tw-w-full tw-p-3 tw-text-gray-800 tw-placeholder-gray-400\n              tw-bg-transparent tw-border-none tw-resize-none\n              focus:tw-ring-0 focus:tw-outline-none focus:tw-shadow-none\n              tw-transition-all tw-duration-200\n              ${isExpanded ? 'tw-min-h-[120px]' : 'tw-min-h-[60px]'}\n            `}\n            maxLength={maxLength}\n            aria-label=\"Chat message input\"\n          />\n          <div className=\"tw-absolute tw-bottom-1 tw-right-2 tw-text-xs tw-text-gray-400\">\n            {messageInput.length}/{maxLength}\n          </div>\n        </div>\n\n        {/* File name display */}\n        {uploadedFileName && (\n          <div className=\"tw-px-3 tw-py-2 tw-text-sm tw-text-gray-600 tw-border-t tw-border-gray-100 tw-flex tw-justify-between tw-items-center\">\n            <span className=\"tw-truncate\" title={uploadedFileName}>{uploadedFileName}</span>\n            <button\n              onClick={handleRemoveFileClick}\n              className=\"tw-text-red-500 hover:tw-text-red-700 tw-ml-2 tw-flex-shrink-0\"\n              aria-label=\"Remove attached file\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"tw-w-4 tw-h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        )}\n\n        <div className=\"tw-flex tw-items-center tw-justify-between tw-border-t tw-border-gray-100 tw-p-2\">\n          {/* Left side actions */}\n          <div className=\"tw-flex tw-items-center tw-gap-2\">\n            <input\n              type=\"file\"\n              className=\"tw-hidden\"\n              accept=\"image/*\"\n              ref={fileInputRef}\n              onChange={handleFileChange}\n            />\n            <button\n              onClick={handleAttachClick}\n              className=\"tw-p-2 tw-text-gray-500 hover:primary-text tw-transition-colors\"\n              aria-label=\"Attach image file\"\n            >\n              <MdAttachFile className='tw-transform tw-rotate-45' size={20} />\n            </button>\n\n            {/* Error message */}\n            {error && (\n              <div className=\"tw-text-xs tw-text-red-500\">{error}</div>\n            )}\n          </div>\n\n          {/* Send button - Show only if there's text or a file */}\n          {canSend && (\n            <button\n              onClick={handleSend}\n              className=\"tw-flex tw-items-center tw-justify-center tw-w-8 tw-h-8 tw-rounded-lg primary-bg tw-text-white hover:primary-darken tw-transition-all tw-duration-200 tw-transform hover:tw-scale-110 active:tw-scale-95 disabled:tw-opacity-50\"\n              aria-label=\"Send message\"\n            // disabled={!canSend} // Button is conditionally rendered instead\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"tw-w-4 tw-h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5\" />\n              </svg>\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"tw-text-center tw-text-gray-500 tw-text-xs tw-mt-3\">\n        Powered by LAWMA.ai {/* Or Mixhers AI? Update as needed */}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInput;\n","import React, { useState, useEffect } from 'react';\nimport { Message, CurrentChat } from './utils';\nimport ChatHeader from './ChatHeader';\nimport ChatContent from './ChatContent';\nimport ChatInput from './ChatInput';\n\ninterface ChatWindowProps {\n  isOpen: boolean;\n  isTyping: boolean;\n  previousMessages: Message[];\n  currentChat: CurrentChat;\n  error: string;\n  uploadedFileName?: string;\n  chatContentRef: React.RefObject<HTMLDivElement>;\n  primaryColor?: string;\n  isFullscreen: boolean;\n  name: string;\n  welcomeMessages?: string[];\n  popularQuestions?: string[];\n  popularQuestionsTitle?: string;\n  statusMessage?: string;\n  onClose: () => void;\n  onClearChat: (event?: React.MouseEvent) => void;\n  onSendMessage: (messageText: string) => void;\n  onFileUpload: (file: File) => void;\n  onRemoveFile: () => void;\n  onToggleFullscreen: () => void;\n}\n\nconst ChatWindow: React.FC<ChatWindowProps> = ({\n  primaryColor,\n  isOpen,\n  isTyping,\n  previousMessages,\n  currentChat,\n  error,\n  uploadedFileName,\n  chatContentRef,\n  isFullscreen,\n  name,\n  onClose,\n  onClearChat,\n  onSendMessage,\n  onFileUpload,\n  onRemoveFile,\n  onToggleFullscreen,\n  welcomeMessages,\n  popularQuestions,\n  popularQuestionsTitle,\n  statusMessage\n}) => {\n  const showWelcome = previousMessages.length === 0 && !currentChat.user && !currentChat.ai && !isTyping;\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsSmallScreen(window.innerWidth < 512);\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const transformClass = isOpen ? 'tw-translate-x-0' : 'tw-translate-x-full';\n\n  return (\n    <div\n      className={`\n        tw-fixed tw-inset-y-0 tw-right-0\n        ${isFullscreen || isSmallScreen ? 'tw-w-full' : 'tw-w-[24rem]'}\n        tw-z-[9999] tw-transform\n        tw-transition-all tw-duration-300 tw-ease-out\n        tw-flex tw-flex-col chat-window\n        ${transformClass}\n        ${isOpen ? 'tw-opacity-100 tw-scale-100' : 'tw-opacity-0 tw-scale-95'}\n      `}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby=\"chat-widget-title\"\n      hidden={!isOpen}\n    >\n      <div className=\"tw-h-screen tw-bg-white tw-shadow-xl tw-flex tw-flex-col tw-will-change-transform tw-overflow-hidden\">\n        <ChatHeader\n          onClose={onClose}\n          onClearChat={onClearChat}\n          primaryColor={primaryColor}\n          isFullscreen={isFullscreen}\n          onToggleFullscreen={onToggleFullscreen}\n          name={name}\n        />\n\n        <div className={`tw-flex-1 tw-w-full tw-mx-auto tw-flex tw-flex-col tw-overflow-hidden ${isFullscreen ? 'tw-max-w-[1100px]' : ''}`}>\n          <div className=\"tw-relative tw-flex-1 tw-min-h-0\">\n            <ChatContent\n              previousMessages={previousMessages}\n              currentChat={currentChat}\n              isTyping={isTyping}\n              isFullscreen={isFullscreen}\n              chatContentRef={chatContentRef}\n              welcomeMessages={welcomeMessages}\n              onSendMessage={onSendMessage}\n              popularQuestions={popularQuestions}\n              popularQuestionsTitle={popularQuestionsTitle}\n              statusMessage={statusMessage}\n            />\n          </div>\n          <ChatInput\n            error={error}\n            uploadedFileName={uploadedFileName}\n            primaryColor={primaryColor}\n            onSendMessage={onSendMessage}\n            onFileUpload={onFileUpload}\n            onRemoveFile={onRemoveFile}\n            isFullscreen={isFullscreen}\n            showWelcome={showWelcome}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"names":["_ref","onClose","onClearChat","isFullscreen","onToggleFullscreen","name","isOnline","setIsOnline","useState","navigator","onLine","useEffect","handleOnline","handleOffline","window","addEventListener","removeEventListener","useInternetStatus","_jsxs","className","children","_jsx","title","id","onClick","Delete","size","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","_g","_defs","_excluded","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgArrowFollowUp","ref","titleId","props","o","i","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","propertyIsEnumerable","_objectWithoutProperties","width","height","clipPath","forwardRef","_path","SvgSuggestions","SvgArrow","questions","handleSendMessage","variant","isFollowUp","ArrowFollowUp","Suggestions","map","question","index","Arrow","TextContent","_ref2","content","isStreaming","isUser","typedElementRef","timestamp","Date","toLocaleTimeString","hour","minute","dangerouslySetInnerHTML","__html","parseMessage","QuestionContent","_ref3","options","onSelect","_Fragment","option","ImageContent","_ref4","mediaUrl","src","alt","loading","VideoContent","_ref5","controls","preload","controlsList","playsInline","type","DocumentContent","_ref6","fileName","split","pop","fileSize","setFileSize","React","async","contentLength","fetch","url","method","headers","get","bytes","Math","floor","log","parseFloat","pow","toFixed","formatFileSize","parseInt","getDocumentSize","then","href","target","rel","TextImageContent","_ref7","imageUrl","contentType","onSendMessage","follow_up_questions","handleOptionSelect","PopularQuestions","Promise","resolve","text","ChatMessage","message","isCurrentMessage","chatContentRef","sender","useRef","typedInstanceRef","isPrimaryContentTyped","setIsPrimaryContentTyped","hasTyped","current","destroy","strings","typeSpeed","showCursor","cursorChar","onComplete","self","cursor","remove","onStringTyped","scrollTop","scrollHeight","Typed","innerHTML","MessageContentRenderer","content_type","media_url","image_url","additional_responses","response","statusMessage","previousMessages","currentChat","isTyping","welcomeMessages","popularQuestions","popularQuestionsTitle","showWelcome","user","ai","scrollToBottom","smooth","undefined","scrollTo","top","behavior","observer","MutationObserver","observe","childList","subtree","characterData","disconnect","style","WebkitOverflowScrolling","ReactTyped","msg","slice","backSpeed","backDelay","loop","smartBackspace","shuffle","typedRef","typed","TypingIndicator","error","uploadedFileName","onFileUpload","onRemoveFile","messageInput","setMessageInput","isExpanded","setIsExpanded","fileInputRef","handleSend","useCallback","trim","canSend","value","onChange","event","onKeyDown","key","shiftKey","preventDefault","onFocus","onBlur","placeholder","maxLength","handleRemoveFileClick","accept","file","files","handleAttachClick","click","MdAttachFile","primaryColor","isOpen","isSmallScreen","setIsSmallScreen","handleResize","innerWidth","transformClass","role","hidden","ChatHeader","ChatContent","ChatInput"],"mappings":"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","debug_id":"d3762100-e700-5b5d-8e97-b87a7db10ebb"}